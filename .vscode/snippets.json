{"id":1,"parentId":-1,"label":"snippets","lastId":24,"children":[{"id":2,"parentId":1,"label":"hot","folder":true,"children":[{"id":7,"parentId":2,"label":"let","value":"let res = 2;","children":[],"resolveSyntax":true},{"id":8,"parentId":2,"label":"const","value":"const res = 5;","children":[],"resolveSyntax":true},{"id":9,"parentId":2,"label":"con.log","value":"console.log(\"log\");","children":[],"resolveSyntax":true},{"id":6,"parentId":2,"label":"con.log(${})","value":"console.log(`${1:a}: ${${1:a}}, ${0:b}: ${${0:b}}`);","children":[],"resolveSyntax":true},{"id":20,"parentId":2,"label":"fu","value":"function ${1:fu1}(a, b) {\n  return 0;      \n}","children":[],"resolveSyntax":true},{"id":12,"parentId":2,"label":"fuArrow","value":"const ${1:name} = (x, y) => {       \n  return 0;\n}","children":[],"resolveSyntax":true},{"id":13,"parentId":2,"label":"lit arr","value":"const ${1: arr1} = [1, 2, 3, 4, 5, 6];","children":[],"resolveSyntax":true},{"id":14,"parentId":2,"label":"lit obj","value":"const ${1:obj1} = { a: 1, b: 2, };","children":[],"resolveSyntax":true},{"id":10,"parentId":2,"label":"tern","value":"a > b ? a : b;","children":[],"resolveSyntax":true},{"id":21,"parentId":2,"label":"console","folder":true,"children":[{"id":22,"parentId":21,"label":"amed","value":"git commit -a --amend --no-edit","children":[],"resolveSyntax":true},{"id":23,"parentId":21,"label":"am","value":"git commit -am \"\"","children":[]},{"id":24,"parentId":21,"label":"rar","value":"\"c:\\Program Files\\WinRAR\\rar.exe\" a -r -x@\"c:\\Program Files\\WinRAR\\files_exclude.txt\" -x\"node_modules\" -m0 -agyyyymmddhhmmss %CD%","children":[],"resolveSyntax":true}]}]},{"id":4,"parentId":1,"label":"React","folder":true,"children":[{"id":5,"parentId":4,"label":"useEffect","value":"useEffect(() => {}, []); // componentDidMount()","children":[],"resolveSyntax":true},{"id":11,"parentId":4,"label":"rfc","value":"import React, { useState, useEffect } from 'react'\nconst ${0:comp} = (a, b) => {\n    return (\n        <div className = 'myclass'>\n        </div>\n    );\n}\n\nexport default ${0:comp};","children":[],"resolveSyntax":true},{"id":15,"parentId":4,"label":"useState","value":"const [${1:val}, set${1:val}] = useState(0);","children":[],"resolveSyntax":true},{"id":18,"parentId":4,"label":"useMemo","value":"const ${1:val} = useMemo(() => {\n        return console.log(\"useMemo\");\n    }, [dependences]);","children":[],"resolveSyntax":true},{"id":19,"parentId":4,"label":"setState","value":"set${1:Val}((prev) => {\n  return prev + 1;\n}); ","children":[],"resolveSyntax":true}]}]}